{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","undefined","tick","setState","console","log","toLocaleTimeString","this","setInterval","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","onShowClicked","onHideClicked","onSetRandomNameClicked","Math","ceil","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,aAASC,GAHb,EAqBEC,KAAO,WACL,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,uBAxBhC,uDAME,WACEC,KAAKJ,SAAS,CAAEH,QAASQ,YAAYD,KAAKL,KAAM,SAPpD,gCAUE,SAAmBO,GACbA,EAAUC,OAASH,KAAKI,MAAMD,MAEhCN,QAAQC,IAAR,qCAA0CI,EAAUC,KAApD,eAA+DH,KAAKI,MAAMD,SAbhF,kCAiBE,WACEE,cAAcL,KAAKV,MAAMG,WAlB7B,oBA2BE,WACE,OACE,8CAEG,IACAO,KAAKV,MAAMC,KAAKQ,4BAhCzB,GAA2BO,IAAMC,WCD3BC,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,G,EAGbC,cAAgB,WACd,EAAKf,SAAS,CAAEa,gBAAgB,K,EAGlCG,cAAgB,WACd,EAAKhB,SAAS,CAAEa,gBAAgB,K,EAGlCI,uBAAyB,WACvB,EAAKjB,SAAS,CAAEc,UAAWI,KAAKC,KAAqB,IAAhBD,KAAKE,a,4CAG5C,WACE,MAAsChB,KAAKV,MAAnCmB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKO,UAAU,MAAf,UACE,6CACA,wBAAQC,KAAK,SAASC,QAASnB,KAAKW,cAApC,wBAIA,wBAAQO,KAAK,SAASC,QAASnB,KAAKY,cAApC,wBAIA,wBAAQM,KAAK,SAASC,QAASnB,KAAKa,uBAApC,6BAGCJ,GACC,cAAC,EAAD,CAAON,KAAMO,W,GApCLJ,IAAMC,WA2CTC,IClDfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6a18b453.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  date: Date,\n  timerId: NodeJS.Timer | undefined,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n    timerId: undefined,\n  };\n\n  componentDidMount() {\n    this.setState({ timerId: setInterval(this.tick, 1000) });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  tick = () => {\n    this.setState({ date: new Date() });\n    // eslint-disable-next-line no-console\n    console.log(this.state.date.toLocaleTimeString());\n  };\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  onShowClicked = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  onHideClicked = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  onSetRandomNameClicked = () => {\n    this.setState({ clockName: Math.ceil(Math.random() * 1000) });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button type=\"button\" onClick={this.onShowClicked}>\n          Show clock\n        </button>\n\n        <button type=\"button\" onClick={this.onHideClicked}>\n          Hide clock\n        </button>\n\n        <button type=\"button\" onClick={this.onSetRandomNameClicked}>\n          Set random name\n        </button>\n        {isClockVisible && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}